'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _html2canvas = require('html2canvas');

var _html2canvas2 = _interopRequireDefault(_html2canvas);

var _platform = require('platform');

var _platform2 = _interopRequireDefault(_platform);

var _axios = require('axios');

var _axios2 = _interopRequireDefault(_axios);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var FeedbackPopup = function () {
    function FeedbackPopup(widgetTitle, title, snapshotBody, placeholderText, emailEndpoint) {
        _classCallCheck(this, FeedbackPopup);

        this.title = title, this.snapshotBody = snapshotBody, this.placeholderText = placeholderText, this.isOpen = false, this.container = {
            buttonHTML: '\n            <div class="widget__container">\n                <div class="widget__container-inner">\n                    <button class="widget__button">' + widgetTitle + '</button>\n                </div>\n            </div>',
            mainDiv: document.getElementsByClassName("js-feedback-popup")[0],
            contentDiv: document.getElementsByClassName("js-feedback-popup-content")[0],
            buttonShowDiv: document.getElementsByClassName("js-feedback-popup-btn-show")[0],
            confirmationShowDiv: document.getElementsByClassName("js-feedback-popup-confirmation")[0],
            buttonSend: document.getElementsByClassName("js-feedback-post")[0],
            popupHTML: '<div class="feedback__container">\n\n                            <div class="feedback__container--inner">\n\n                                <div class="feedback__header">\n\n                                    <h1>' + title + '</h1>\n\n                                </div>\n\n                                <div class="feedback__textarea">\n\n                                    <textarea autoFocus placeholder="' + placeholderText + '" name="feedback" id="textarea"></textarea>\n\n                                </div>\n\n                                <div class="feedback__add-screenshot">\n                                    <label class="control control-checkbox">\n                                        <input id="js-checkbox" type="checkbox" checked/> Include a screenshot?\n                                        <div class="control_indicator"></div>\n                                    </label>\n                                </div>\n\n\t\t\t\t\t\t\t\t<div class="feedback__screenshot">\n\t\t\t\t\t\t\t\t\t<div class="spinner"></div>\n                                </div>\n\n                                <div class="feedback__confirm">\n                                    <ul>\n                                    <li>\n                                        <button class="btn btn-cancel js-feedback-popup-btn-cancel">cancel</button>\n                                    </li>\n                                    <li>\n                                        <button class="btn btn-confirm js-feedback-post">send</button>\n                                    </li>\n                                    </ul>\n\n                                </div>\n\n\n                            </div>\n\n                        </div>',
            confirmtionHTML: '<div class="feedback__container">\n                                <div class="feedback-popup__confirmation-inner">\n                                <div class="feedback-popup__confirmation-text">\n                                    <p class="thank-you">Thank you for your help!</p>\n                                </div>\n                                    <div class="feedback-popup__confirmation-button">\n                                    <button class="btn btn-cancel js-feedback-OK">OK</button>\n                                    </div>\n                                </div>\n\t\t\t\t\t\t\t</div>',
            personalEmailEndpoint: emailEndpoint
        };
    }

    _createClass(FeedbackPopup, [{
        key: 'showConfirmation',
        value: function showConfirmation() {
            this.container.contentDiv.innerHTML = this.container.confirmtionHTML;
            this.container.contentDiv.style.display = "block";
            var buttonOK = document.getElementsByClassName("js-feedback-OK")[0];
            var that = this;
            buttonOK.addEventListener("click", function () {
                that.container.confirmationShowDiv.style.display = "none";
                that.hideContentDiv();
            });
        }
    }, {
        key: 'showFeedbackModal',
        value: function showFeedbackModal() {
            this.container.contentDiv.innerHTML = this.container.popupHTML;
            this.container.contentDiv.style.display = "block";
            var buttonCancel = document.getElementsByClassName("js-feedback-popup-btn-cancel")[0];
            var buttonSend = document.getElementsByClassName("js-feedback-post")[0];
            var that = this;
            this.container.buttonShowDiv.style.display = "none";
            buttonCancel.addEventListener("click", function () {
                that.hideContentDiv();
            });
            buttonSend.addEventListener("click", function () {
                that.sendData();
            });
            this.toggleScreenshot();
            return this;
        }
    }, {
        key: 'spinner',
        value: function spinner(state) {
            var spinnerElement = document.querySelector('.spinner');
            switch (state) {
                case 'show':
                    spinnerElement.classList.add('loading');
                    break;
                case 'hide':
                    spinnerElement.classList.remove('loading');
                    break;
                default:
                    break;
            }
        }
    }, {
        key: 'hideContentDiv',
        value: function hideContentDiv() {
            this.container.contentDiv.style.display = "none";
            this.container.buttonShowDiv.style.display = "block";
        }
    }, {
        key: 'toggleScreenshot',
        value: function toggleScreenshot() {
            var _this = this;

            var checkbox = document.getElementById('js-checkbox');
            var isChecked = true;

            checkbox.addEventListener('click', function () {
                if (!isChecked === checkbox.checked) {
                    var screenShotParent = document.getElementsByClassName("feedback__screenshot")[0];
                    screenShotParent.removeChild(document.getElementsByTagName('canvas')[0]);
                } else if (isChecked === checkbox.checked) {
                    _this.createScreenshot();
                }
            });
        }
    }, {
        key: 'buttonWidget',
        value: function buttonWidget() {
            this.container.buttonShowDiv.innerHTML = this.container.buttonHTML;
            var buttonShow = document.getElementsByClassName("js-feedback-popup-btn-show")[0];
            var that = this;
            buttonShow.addEventListener("click", function () {
                that.showFeedbackModal();
                that.createScreenshot();
            });
        }
    }, {
        key: 'createScreenshot',
        value: function createScreenshot() {
            this.spinner('show');
            (0, _html2canvas2.default)(document.getElementById('' + this.snapshotBody)).then(function (canvas) {
                document.getElementsByClassName("feedback__screenshot")[0].appendChild(canvas);
            });
            this.spinner('hide');
        }
    }, {
        key: 'sendData',
        value: function sendData() {
            var _this2 = this;

            var canvas = document.getElementsByTagName('canvas')[0];

            var base64result = canvas && canvas.toDataURL('image/png', 1.0),
                userScreenshot = base64result && base64result.split(',')[1],
                userPlatform = _platform2.default.description,
                userFeedback = document.getElementById('textarea').value;

            var screenshotIncluded = canvas ? "Incuded" : "Not Included";

            var apiConnection = '' + this.container.personalEmailEndpoint;

            _axios2.default.post('' + apiConnection, {
                userPlatform: userPlatform,
                userFeedback: userFeedback,
                screenshotIncluded: screenshotIncluded,
                userScreenshot: userScreenshot
            }).then(function () {
                return _this2.showConfirmation();
            }).catch(function (error) {
                return alert(error);
            });
            // uncomment for local dev
            // alert('The message has been sent'); 
            // this.showConfirmation();
        }
    }, {
        key: 'init',
        value: function init() {
            this.buttonWidget();
        }
    }]);

    return FeedbackPopup;
}();

// swicth comments below for local dev
// export default FeedbackPopup;

module.exports = FeedbackPopup;