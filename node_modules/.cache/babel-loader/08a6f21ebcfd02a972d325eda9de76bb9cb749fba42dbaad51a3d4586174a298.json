{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/mayal/REACT/login/src/component/List.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from './Header';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst List = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const UserList = () => {\n    _s();\n    const [users, setUsers] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [totalPages, setTotalPages] = useState(0);\n\n    // Other component logic...\n  };\n  _s(UserList, \"bYg3u3QF3xJZ0v8XwfR7leQ45qI=\");\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const response = await axios.get(`/http://localhost:4000/Route/index/userslist?page=${currentPage}`);\n        const {\n          users,\n          totalPages\n        } = response.data;\n        setUsers(users);\n        setTotalPages(totalPages);\n      } catch (error) {\n        console.error(error);\n        // Handle error state\n      }\n    };\n\n    fetchUsers();\n  }, [currentPage]);\n\n  // useEffect(() => {\n  //   async function fetchData() {\n  //     try {\n  //       const res = await axios.get('http://localhost:4000/Route/index/userslist', users);\n  //       console.log(res.data);\n  //       setUsers(res.data);\n  //     } catch (error) {\n  //       console.error(error);\n  //     }\n  //   }\n  //   fetchData();\n  // }, []);\n\n  // Calculate total number of pages\n  const totalPages = Math.ceil(users.length / itemsPerPage);\n\n  // Get the users for the current page\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  // const currentUsers = users.slice(indexOfFirstItem, indexOfLastItem);\n\n  // Change page\n  const handlePageChange = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n\n  // Generate page numbers\n  const pageNumbers = [];\n  for (let i = 1; i <= totalPages; i++) {\n    pageNumbers.push(i);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), \"return (\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", user.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", user.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }, this)]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: currentPage === 1,\n          onClick: () => setCurrentPage(currentPage - 1),\n          children: \"Previous Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Current Page: \", currentPage]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: currentPage === totalPages,\n          onClick: () => setCurrentPage(currentPage + 1),\n          children: \"Next Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 3\n    }, this), \");\"]\n  }, void 0, true);\n};\n_s2(List, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useState","useEffect","Header","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","List","_s2","_s","$RefreshSig$","UserList","users","setUsers","currentPage","setCurrentPage","totalPages","setTotalPages","fetchUsers","response","get","data","error","console","Math","ceil","length","itemsPerPage","indexOfLastItem","indexOfFirstItem","handlePageChange","pageNumber","pageNumbers","i","push","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","name","email","id","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/macbook/Desktop/mayal/REACT/login/src/component/List.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Header from './Header';\nimport axios from 'axios';\n\nconst List = () => {\n  const UserList = () => {\n    const [users, setUsers] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [totalPages, setTotalPages] = useState(0);\n    \n    // Other component logic...\n  }\n  \n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const response = await axios.get(`/http://localhost:4000/Route/index/userslist?page=${currentPage}`);\n        const { users, totalPages } = response.data;\n        setUsers(users);\n        setTotalPages(totalPages);\n      } catch (error) {\n        console.error(error);\n        // Handle error state\n      }\n    };\n  \n    fetchUsers();\n  }, [currentPage]);\n  \n\n  // useEffect(() => {\n  //   async function fetchData() {\n  //     try {\n  //       const res = await axios.get('http://localhost:4000/Route/index/userslist', users);\n  //       console.log(res.data);\n  //       setUsers(res.data);\n  //     } catch (error) {\n  //       console.error(error);\n  //     }\n  //   }\n  //   fetchData();\n  // }, []);\n\n  // Calculate total number of pages\n  const totalPages = Math.ceil(users.length / itemsPerPage);\n\n  // Get the users for the current page\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  // const currentUsers = users.slice(indexOfFirstItem, indexOfLastItem);\n\n  // Change page\n  const handlePageChange = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n\n  // Generate page numbers\n  const pageNumbers = [];\n  for (let i = 1; i <= totalPages; i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <>\n      <Header />\n      {/* <div className=\"container mt-5\">\n        <table className=\"table table-striped\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Id</th>\n              <th scope=\"col\">Name</th>\n              <th scope=\"col\">Email</th>\n              <th scope=\"col\">Hobbies</th>\n            </tr>\n          </thead>\n          <tbody>\n            {currentUsers.map((item, index) => {\n              return (\n                <tr key={index}>\n                  <td>{item.id}</td>\n                  <td>{item.fname}</td>\n                  <td>{item.email}</td>\n                  <td>{item.hobbies}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n        <nav>\n          <ul className=\"pagination\">\n            {pageNumbers.map((pageNumber) => (\n              <li key={pageNumber} className=\"page-item\">\n                <a\n                  href=\"#\"\n                  className={`page-link ${pageNumber === currentPage ? 'active' : ''}`}\n                  onClick={() => handlePageChange(pageNumber)}\n                >\n                  {pageNumber}\n                </a>\n              </li>\n            ))}\n          </ul>\n        </nav>\n      </div> */}\n\n      return (\n  <div>\n    {/* Render the user data */}\n    {users.map((user) => (\n      <div key={user.id}>\n        <p>Name: {user.name}</p>\n        <p>Email: {user.email}</p>\n      </div>\n    ))}\n\n    {/* Render pagination controls */}\n    <div>\n      <button disabled={currentPage === 1} onClick={() => setCurrentPage(currentPage - 1)}>\n        Previous Page\n      </button>\n      <span>Current Page: {currentPage}</span>\n      <button disabled={currentPage === totalPages} onClick={() => setCurrentPage(currentPage + 1)}>\n        Next Page\n      </button>\n    </div>\n  </div>\n);\n\n    </>\n  );\n};\n\nexport default List;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}